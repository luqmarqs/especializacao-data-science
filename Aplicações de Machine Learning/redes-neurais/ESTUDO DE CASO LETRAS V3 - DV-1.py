# -*- coding: utf-8 -*-
"""
Created on Thu May 19 19:56:04 2023

@author: AM
"""

import matplotlib.pyplot as plt
import numpy as np
import random

from sklearn.neural_network import MLPClassifier
from sklearn.datasets import make_classification
from sklearn.model_selection import train_test_split

# ENTRADAS
X = [   
          [1.,1.,1.,1.,
           1.,0.,0.,1.,
           1.,0.,0.,1.,
           1.,1.,1.,1.,
           1.,0.,0.,1.,
           1.,0.,0.,1.],
 
         [1.,0.,0.,1.,
          1.,0.,1.,0.,
          1.,1.,0.,0.,
          1.,1.,0.,0.,
          1.,0.,1.,0.,
          1.,0.,0.,1.],

         [1.,1.,1.,0., 
          1.,0.,0.,1.,
          1.,1.,1.,0.,
          1.,0.,0.,1.,
          1.,0.,0.,1.,
          1.,1.,1.,0.],
          
         [1.,1.,1.,1.,
          0.,1.,1.,0.,
          0.,1.,1.,0.,
          0.,1.,1.,0.,
          0.,1.,1.,0.,
          1.,1.,1.,1.],
         
         [1.,0.,0.,0.,
          0.,1.,0.,0.,
          0.,0.,1.,1.,
          0.,0.,1.,1.,
          0.,1.,0.,0.,
          1.,0.,0.,0.],
         
         # NOVAS LETRAS ADICIONADAS:
             
         [0.,0.,0.,1.,
          0.,0.,1.,0.,
          1.,1.,0.,0.,
          1.,1.,0.,0.,
          0.,0.,1.,0.,
          0.,0.,0.,1.],
         
         [1.,1.,1.,1.,
          1.,0.,0.,0.,
          1.,0.,0.,0.,
          1.,1.,1.,0.,
          1.,0.,0.,0.,
          1.,1.,1.,1.],
         
         [1.,1.,1.,1.,
          1.,0.,0.,0.,
          1.,0.,0.,0.,
          1.,1.,1.,0.,
          1.,0.,0.,0.,
          1.,0.,0.,0.],
         
         [1.,1.,1.,1.,
          0.,1.,1.,0.,
          0.,1.,1.,0.,
          0.,1.,1.,0.,
          0.,1.,1.,0.,
          0.,1.,1.,0.],
         
         [1.,0.,0.,1.,
          1.,0.,0.,1.,
          1.,0.,0.,1.,
          1.,1.,1.,1.,
          1.,0.,0.,1.,
          1.,0.,0.,1.]
           
     ]

# SAÍDAS
y = [['A'], ['K'], ['B'], ['I'], ['>'], ['<'], ['E'], ['F'], ['T'], ['H']]


clf = MLPClassifier(solver='lbfgs',activation='logistic', alpha=1e-5,hidden_layer_sizes=(2500,2500), random_state=1)

clf.fit(X, y)


# TESTE
T=        [0.,0.,0.,1.,
         0.,0.,1.,0.,
         1.,1.,0.,0.,
         1.,1.,0.,0.,
         0.,0.,1.,0.,
         1.,0.,0.,1.]

























# TESTANDO
print("TESTANDO: ")
print(clf.predict([T]))



